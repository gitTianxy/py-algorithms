# encoding=utf-8
"""
Union-Find Algorithm demo
ref:
    http://blog.csdn.net/dm_vincent/article/details/7655764
    https://neo1218.github.io/unionfind/
-----------------------
I. 应用场景
1. 优化网络布线
2. 其他重复性判断问题

II. 算法思想
首先根据规则创建节点集合以及它们之间的连接(一个分组的网络), 注意不创建重复连接--网络中无闭环
然后基于上述数据结构可以判断任意两个网络的连通性: '连通'的所有节点属于一个'组'，因此不连通的节点必然就属于不同的组;

III. 数据结构
1. 组

IV. 算法步骤
...

V. 注
本算法其实有两个角度作用:
    1. 提供了一种快速搜索分组的思想
    2. 提供了一种动态生成分组/网络的思想
至于具体采用哪种数据结构去实现上述构想, 就智者见智了
"""

if __name__ == "__main__":
    pass
